<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<context:component-scan base-package="com.sundoctor">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<util:properties id="p_datasource" location="classpath:jdbc.properties" />

	<!-- 主数据源，使用alibaba druid连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="name" value="#{p_datasource['jdbc.name']}" />
		<property name="url" value="#{p_datasource['jdbc.url']}" />
		<property name="username" value="#{p_datasource['jdbc.username']}" />
		<property name="password" value="#{p_datasource['jdbc.password']}" />
		<property name="driverClassName" value="#{p_datasource['jdbc.driverClassName']}" />
		<property name="initialSize" value="#{p_datasource['jdbc.initialSize']}" />
		<property name="maxActive" value="#{p_datasource['jdbc.maxActive']}" />
		<property name="minIdle" value="#{p_datasource['jdbc.minIdle']}" />
		<property name="maxWait" value="#{p_datasource['jdbc.maxWait']}" />
		<property name="useUnfairLock" value="#{p_datasource['jdbc.useUnfairLock']}" />
		<property name="validationQuery" value="#{p_datasource['jdbc.validationQuery']}" />
		<property name="testOnBorrow" value="#{p_datasource['jdbc.testOnBorrow']}" />
		<property name="testOnReturn" value="#{p_datasource['jdbc.testOnReturn']}" />
		<property name="testWhileIdle" value="#{p_datasource['jdbc.testWhileIdle']}" />
		<property name="timeBetweenEvictionRunsMillis" value="#{p_datasource['jdbc.timeBetweenEvictionRunsMillis']}" />
		<property name="minEvictableIdleTimeMillis" value="#{p_datasource['jdbc.minEvictableIdleTimeMillis']}" />
		<property name="filters" value="#{p_datasource['jdbc.filters']}" />
	</bean>


	<!-- 数据源定义,使用c3p0 连接池 -->
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"> -->
	<!-- <property name="driverClass" value="${jdbc.driverClassName}" /> -->
	<!-- <property name="jdbcUrl" value="${jdbc.url}" /> -->
	<!-- <property name="user" value="${jdbc.username}" /> -->
	<!-- <property name="password" value="${jdbc.password}" /> -->
	<!-- <property name="initialPoolSize" value="${cpool.minPoolSize}" /> -->
	<!-- <property name="minPoolSize" value="${cpool.minPoolSize}" /> -->
	<!-- <property name="maxPoolSize" value="${cpool.maxPoolSize}" /> -->
	<!-- <property name="acquireIncrement" value="${cpool.acquireIncrement}" /> -->
	<!-- <property name="maxIdleTime" value="${cpool.maxIdleTime}" /> -->
	<!-- </bean> -->

	<!-- 创建quartz数据库表 -->
	<!-- <jdbc:initialize-database data-source="dataSource" ignore-failures="ALL"> -->
	<!-- <jdbc:script location="classpath:db/tables_h2.sql" /> -->
	<!-- </jdbc:initialize-database> -->

	<!-- 使用H2内存数据库并创建quartz数据库表 -->
	<!-- <jdbc:embedded-database id="dataSource" type="H2"> -->
	<!-- <jdbc:script location="classpath:db/tables_h2.sql" /> -->
	<!-- </jdbc:embedded-database> -->

	<!--Hibernate SessionFatory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.sundoctor.example.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
			</props>
		</property>
	</bean>

	<!--Hibernate TransactionManager -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />


</beans>